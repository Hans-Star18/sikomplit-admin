/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as dashboardIndexImport } from './routes/(dashboard)/index'
import { Route as authLogoutImport } from './routes/(auth)/logout'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as dashboardUsersIndexImport } from './routes/(dashboard)/users/index'
import { Route as dashboardSurveysIndexImport } from './routes/(dashboard)/surveys/index'
import { Route as dashboardResearchIndexImport } from './routes/(dashboard)/research/index'
import { Route as dashboardRecommendationsIndexImport } from './routes/(dashboard)/recommendations/index'
import { Route as dashboardPageViewsIndexImport } from './routes/(dashboard)/page-views/index'
import { Route as dashboardFeedbacksIndexImport } from './routes/(dashboard)/feedbacks/index'
import { Route as dashboardUsersIdImport } from './routes/(dashboard)/users/$id'
import { Route as dashboardResearchCreateImport } from './routes/(dashboard)/research/create'
import { Route as dashboardResearchSlugImport } from './routes/(dashboard)/research/$slug'
import { Route as dashboardRecommendationsIdImport } from './routes/(dashboard)/recommendations/$id'
import { Route as dashboardUsersIdEditImport } from './routes/(dashboard)/users/$id.edit'
import { Route as dashboardResearchSlugEditImport } from './routes/(dashboard)/research/$slug.edit'
import { Route as dashboardRecommendationsIdEditImport } from './routes/(dashboard)/recommendations/$id.edit'

// Create/Update Routes

const dashboardIndexRoute = dashboardIndexImport.update({
  id: '/(dashboard)/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const authLogoutRoute = authLogoutImport.update({
  id: '/(auth)/logout',
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const dashboardUsersIndexRoute = dashboardUsersIndexImport.update({
  id: '/(dashboard)/users/',
  path: '/users/',
  getParentRoute: () => rootRoute,
} as any)

const dashboardSurveysIndexRoute = dashboardSurveysIndexImport.update({
  id: '/(dashboard)/surveys/',
  path: '/surveys/',
  getParentRoute: () => rootRoute,
} as any)

const dashboardResearchIndexRoute = dashboardResearchIndexImport.update({
  id: '/(dashboard)/research/',
  path: '/research/',
  getParentRoute: () => rootRoute,
} as any)

const dashboardRecommendationsIndexRoute =
  dashboardRecommendationsIndexImport.update({
    id: '/(dashboard)/recommendations/',
    path: '/recommendations/',
    getParentRoute: () => rootRoute,
  } as any)

const dashboardPageViewsIndexRoute = dashboardPageViewsIndexImport.update({
  id: '/(dashboard)/page-views/',
  path: '/page-views/',
  getParentRoute: () => rootRoute,
} as any)

const dashboardFeedbacksIndexRoute = dashboardFeedbacksIndexImport.update({
  id: '/(dashboard)/feedbacks/',
  path: '/feedbacks/',
  getParentRoute: () => rootRoute,
} as any)

const dashboardUsersIdRoute = dashboardUsersIdImport.update({
  id: '/(dashboard)/users/$id',
  path: '/users/$id',
  getParentRoute: () => rootRoute,
} as any)

const dashboardResearchCreateRoute = dashboardResearchCreateImport.update({
  id: '/(dashboard)/research/create',
  path: '/research/create',
  getParentRoute: () => rootRoute,
} as any)

const dashboardResearchSlugRoute = dashboardResearchSlugImport.update({
  id: '/(dashboard)/research/$slug',
  path: '/research/$slug',
  getParentRoute: () => rootRoute,
} as any)

const dashboardRecommendationsIdRoute = dashboardRecommendationsIdImport.update(
  {
    id: '/(dashboard)/recommendations/$id',
    path: '/recommendations/$id',
    getParentRoute: () => rootRoute,
  } as any,
)

const dashboardUsersIdEditRoute = dashboardUsersIdEditImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => dashboardUsersIdRoute,
} as any)

const dashboardResearchSlugEditRoute = dashboardResearchSlugEditImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => dashboardResearchSlugRoute,
} as any)

const dashboardRecommendationsIdEditRoute =
  dashboardRecommendationsIdEditImport.update({
    id: '/edit',
    path: '/edit',
    getParentRoute: () => dashboardRecommendationsIdRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/logout': {
      id: '/(auth)/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof authLogoutImport
      parentRoute: typeof rootRoute
    }
    '/(dashboard)/': {
      id: '/(dashboard)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof dashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/(dashboard)/recommendations/$id': {
      id: '/(dashboard)/recommendations/$id'
      path: '/recommendations/$id'
      fullPath: '/recommendations/$id'
      preLoaderRoute: typeof dashboardRecommendationsIdImport
      parentRoute: typeof rootRoute
    }
    '/(dashboard)/research/$slug': {
      id: '/(dashboard)/research/$slug'
      path: '/research/$slug'
      fullPath: '/research/$slug'
      preLoaderRoute: typeof dashboardResearchSlugImport
      parentRoute: typeof rootRoute
    }
    '/(dashboard)/research/create': {
      id: '/(dashboard)/research/create'
      path: '/research/create'
      fullPath: '/research/create'
      preLoaderRoute: typeof dashboardResearchCreateImport
      parentRoute: typeof rootRoute
    }
    '/(dashboard)/users/$id': {
      id: '/(dashboard)/users/$id'
      path: '/users/$id'
      fullPath: '/users/$id'
      preLoaderRoute: typeof dashboardUsersIdImport
      parentRoute: typeof rootRoute
    }
    '/(dashboard)/feedbacks/': {
      id: '/(dashboard)/feedbacks/'
      path: '/feedbacks'
      fullPath: '/feedbacks'
      preLoaderRoute: typeof dashboardFeedbacksIndexImport
      parentRoute: typeof rootRoute
    }
    '/(dashboard)/page-views/': {
      id: '/(dashboard)/page-views/'
      path: '/page-views'
      fullPath: '/page-views'
      preLoaderRoute: typeof dashboardPageViewsIndexImport
      parentRoute: typeof rootRoute
    }
    '/(dashboard)/recommendations/': {
      id: '/(dashboard)/recommendations/'
      path: '/recommendations'
      fullPath: '/recommendations'
      preLoaderRoute: typeof dashboardRecommendationsIndexImport
      parentRoute: typeof rootRoute
    }
    '/(dashboard)/research/': {
      id: '/(dashboard)/research/'
      path: '/research'
      fullPath: '/research'
      preLoaderRoute: typeof dashboardResearchIndexImport
      parentRoute: typeof rootRoute
    }
    '/(dashboard)/surveys/': {
      id: '/(dashboard)/surveys/'
      path: '/surveys'
      fullPath: '/surveys'
      preLoaderRoute: typeof dashboardSurveysIndexImport
      parentRoute: typeof rootRoute
    }
    '/(dashboard)/users/': {
      id: '/(dashboard)/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof dashboardUsersIndexImport
      parentRoute: typeof rootRoute
    }
    '/(dashboard)/recommendations/$id/edit': {
      id: '/(dashboard)/recommendations/$id/edit'
      path: '/edit'
      fullPath: '/recommendations/$id/edit'
      preLoaderRoute: typeof dashboardRecommendationsIdEditImport
      parentRoute: typeof dashboardRecommendationsIdImport
    }
    '/(dashboard)/research/$slug/edit': {
      id: '/(dashboard)/research/$slug/edit'
      path: '/edit'
      fullPath: '/research/$slug/edit'
      preLoaderRoute: typeof dashboardResearchSlugEditImport
      parentRoute: typeof dashboardResearchSlugImport
    }
    '/(dashboard)/users/$id/edit': {
      id: '/(dashboard)/users/$id/edit'
      path: '/edit'
      fullPath: '/users/$id/edit'
      preLoaderRoute: typeof dashboardUsersIdEditImport
      parentRoute: typeof dashboardUsersIdImport
    }
  }
}

// Create and export the route tree

interface dashboardRecommendationsIdRouteChildren {
  dashboardRecommendationsIdEditRoute: typeof dashboardRecommendationsIdEditRoute
}

const dashboardRecommendationsIdRouteChildren: dashboardRecommendationsIdRouteChildren =
  {
    dashboardRecommendationsIdEditRoute: dashboardRecommendationsIdEditRoute,
  }

const dashboardRecommendationsIdRouteWithChildren =
  dashboardRecommendationsIdRoute._addFileChildren(
    dashboardRecommendationsIdRouteChildren,
  )

interface dashboardResearchSlugRouteChildren {
  dashboardResearchSlugEditRoute: typeof dashboardResearchSlugEditRoute
}

const dashboardResearchSlugRouteChildren: dashboardResearchSlugRouteChildren = {
  dashboardResearchSlugEditRoute: dashboardResearchSlugEditRoute,
}

const dashboardResearchSlugRouteWithChildren =
  dashboardResearchSlugRoute._addFileChildren(
    dashboardResearchSlugRouteChildren,
  )

interface dashboardUsersIdRouteChildren {
  dashboardUsersIdEditRoute: typeof dashboardUsersIdEditRoute
}

const dashboardUsersIdRouteChildren: dashboardUsersIdRouteChildren = {
  dashboardUsersIdEditRoute: dashboardUsersIdEditRoute,
}

const dashboardUsersIdRouteWithChildren =
  dashboardUsersIdRoute._addFileChildren(dashboardUsersIdRouteChildren)

export interface FileRoutesByFullPath {
  '/login': typeof authLoginRoute
  '/logout': typeof authLogoutRoute
  '/': typeof dashboardIndexRoute
  '/recommendations/$id': typeof dashboardRecommendationsIdRouteWithChildren
  '/research/$slug': typeof dashboardResearchSlugRouteWithChildren
  '/research/create': typeof dashboardResearchCreateRoute
  '/users/$id': typeof dashboardUsersIdRouteWithChildren
  '/feedbacks': typeof dashboardFeedbacksIndexRoute
  '/page-views': typeof dashboardPageViewsIndexRoute
  '/recommendations': typeof dashboardRecommendationsIndexRoute
  '/research': typeof dashboardResearchIndexRoute
  '/surveys': typeof dashboardSurveysIndexRoute
  '/users': typeof dashboardUsersIndexRoute
  '/recommendations/$id/edit': typeof dashboardRecommendationsIdEditRoute
  '/research/$slug/edit': typeof dashboardResearchSlugEditRoute
  '/users/$id/edit': typeof dashboardUsersIdEditRoute
}

export interface FileRoutesByTo {
  '/login': typeof authLoginRoute
  '/logout': typeof authLogoutRoute
  '/': typeof dashboardIndexRoute
  '/recommendations/$id': typeof dashboardRecommendationsIdRouteWithChildren
  '/research/$slug': typeof dashboardResearchSlugRouteWithChildren
  '/research/create': typeof dashboardResearchCreateRoute
  '/users/$id': typeof dashboardUsersIdRouteWithChildren
  '/feedbacks': typeof dashboardFeedbacksIndexRoute
  '/page-views': typeof dashboardPageViewsIndexRoute
  '/recommendations': typeof dashboardRecommendationsIndexRoute
  '/research': typeof dashboardResearchIndexRoute
  '/surveys': typeof dashboardSurveysIndexRoute
  '/users': typeof dashboardUsersIndexRoute
  '/recommendations/$id/edit': typeof dashboardRecommendationsIdEditRoute
  '/research/$slug/edit': typeof dashboardResearchSlugEditRoute
  '/users/$id/edit': typeof dashboardUsersIdEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/logout': typeof authLogoutRoute
  '/(dashboard)/': typeof dashboardIndexRoute
  '/(dashboard)/recommendations/$id': typeof dashboardRecommendationsIdRouteWithChildren
  '/(dashboard)/research/$slug': typeof dashboardResearchSlugRouteWithChildren
  '/(dashboard)/research/create': typeof dashboardResearchCreateRoute
  '/(dashboard)/users/$id': typeof dashboardUsersIdRouteWithChildren
  '/(dashboard)/feedbacks/': typeof dashboardFeedbacksIndexRoute
  '/(dashboard)/page-views/': typeof dashboardPageViewsIndexRoute
  '/(dashboard)/recommendations/': typeof dashboardRecommendationsIndexRoute
  '/(dashboard)/research/': typeof dashboardResearchIndexRoute
  '/(dashboard)/surveys/': typeof dashboardSurveysIndexRoute
  '/(dashboard)/users/': typeof dashboardUsersIndexRoute
  '/(dashboard)/recommendations/$id/edit': typeof dashboardRecommendationsIdEditRoute
  '/(dashboard)/research/$slug/edit': typeof dashboardResearchSlugEditRoute
  '/(dashboard)/users/$id/edit': typeof dashboardUsersIdEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/logout'
    | '/'
    | '/recommendations/$id'
    | '/research/$slug'
    | '/research/create'
    | '/users/$id'
    | '/feedbacks'
    | '/page-views'
    | '/recommendations'
    | '/research'
    | '/surveys'
    | '/users'
    | '/recommendations/$id/edit'
    | '/research/$slug/edit'
    | '/users/$id/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/logout'
    | '/'
    | '/recommendations/$id'
    | '/research/$slug'
    | '/research/create'
    | '/users/$id'
    | '/feedbacks'
    | '/page-views'
    | '/recommendations'
    | '/research'
    | '/surveys'
    | '/users'
    | '/recommendations/$id/edit'
    | '/research/$slug/edit'
    | '/users/$id/edit'
  id:
    | '__root__'
    | '/(auth)/login'
    | '/(auth)/logout'
    | '/(dashboard)/'
    | '/(dashboard)/recommendations/$id'
    | '/(dashboard)/research/$slug'
    | '/(dashboard)/research/create'
    | '/(dashboard)/users/$id'
    | '/(dashboard)/feedbacks/'
    | '/(dashboard)/page-views/'
    | '/(dashboard)/recommendations/'
    | '/(dashboard)/research/'
    | '/(dashboard)/surveys/'
    | '/(dashboard)/users/'
    | '/(dashboard)/recommendations/$id/edit'
    | '/(dashboard)/research/$slug/edit'
    | '/(dashboard)/users/$id/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  authLoginRoute: typeof authLoginRoute
  authLogoutRoute: typeof authLogoutRoute
  dashboardIndexRoute: typeof dashboardIndexRoute
  dashboardRecommendationsIdRoute: typeof dashboardRecommendationsIdRouteWithChildren
  dashboardResearchSlugRoute: typeof dashboardResearchSlugRouteWithChildren
  dashboardResearchCreateRoute: typeof dashboardResearchCreateRoute
  dashboardUsersIdRoute: typeof dashboardUsersIdRouteWithChildren
  dashboardFeedbacksIndexRoute: typeof dashboardFeedbacksIndexRoute
  dashboardPageViewsIndexRoute: typeof dashboardPageViewsIndexRoute
  dashboardRecommendationsIndexRoute: typeof dashboardRecommendationsIndexRoute
  dashboardResearchIndexRoute: typeof dashboardResearchIndexRoute
  dashboardSurveysIndexRoute: typeof dashboardSurveysIndexRoute
  dashboardUsersIndexRoute: typeof dashboardUsersIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  authLoginRoute: authLoginRoute,
  authLogoutRoute: authLogoutRoute,
  dashboardIndexRoute: dashboardIndexRoute,
  dashboardRecommendationsIdRoute: dashboardRecommendationsIdRouteWithChildren,
  dashboardResearchSlugRoute: dashboardResearchSlugRouteWithChildren,
  dashboardResearchCreateRoute: dashboardResearchCreateRoute,
  dashboardUsersIdRoute: dashboardUsersIdRouteWithChildren,
  dashboardFeedbacksIndexRoute: dashboardFeedbacksIndexRoute,
  dashboardPageViewsIndexRoute: dashboardPageViewsIndexRoute,
  dashboardRecommendationsIndexRoute: dashboardRecommendationsIndexRoute,
  dashboardResearchIndexRoute: dashboardResearchIndexRoute,
  dashboardSurveysIndexRoute: dashboardSurveysIndexRoute,
  dashboardUsersIndexRoute: dashboardUsersIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(auth)/login",
        "/(auth)/logout",
        "/(dashboard)/",
        "/(dashboard)/recommendations/$id",
        "/(dashboard)/research/$slug",
        "/(dashboard)/research/create",
        "/(dashboard)/users/$id",
        "/(dashboard)/feedbacks/",
        "/(dashboard)/page-views/",
        "/(dashboard)/recommendations/",
        "/(dashboard)/research/",
        "/(dashboard)/surveys/",
        "/(dashboard)/users/"
      ]
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/(auth)/logout": {
      "filePath": "(auth)/logout.tsx"
    },
    "/(dashboard)/": {
      "filePath": "(dashboard)/index.tsx"
    },
    "/(dashboard)/recommendations/$id": {
      "filePath": "(dashboard)/recommendations/$id.tsx",
      "children": [
        "/(dashboard)/recommendations/$id/edit"
      ]
    },
    "/(dashboard)/research/$slug": {
      "filePath": "(dashboard)/research/$slug.tsx",
      "children": [
        "/(dashboard)/research/$slug/edit"
      ]
    },
    "/(dashboard)/research/create": {
      "filePath": "(dashboard)/research/create.tsx"
    },
    "/(dashboard)/users/$id": {
      "filePath": "(dashboard)/users/$id.tsx",
      "children": [
        "/(dashboard)/users/$id/edit"
      ]
    },
    "/(dashboard)/feedbacks/": {
      "filePath": "(dashboard)/feedbacks/index.tsx"
    },
    "/(dashboard)/page-views/": {
      "filePath": "(dashboard)/page-views/index.tsx"
    },
    "/(dashboard)/recommendations/": {
      "filePath": "(dashboard)/recommendations/index.tsx"
    },
    "/(dashboard)/research/": {
      "filePath": "(dashboard)/research/index.tsx"
    },
    "/(dashboard)/surveys/": {
      "filePath": "(dashboard)/surveys/index.tsx"
    },
    "/(dashboard)/users/": {
      "filePath": "(dashboard)/users/index.tsx"
    },
    "/(dashboard)/recommendations/$id/edit": {
      "filePath": "(dashboard)/recommendations/$id.edit.tsx",
      "parent": "/(dashboard)/recommendations/$id"
    },
    "/(dashboard)/research/$slug/edit": {
      "filePath": "(dashboard)/research/$slug.edit.tsx",
      "parent": "/(dashboard)/research/$slug"
    },
    "/(dashboard)/users/$id/edit": {
      "filePath": "(dashboard)/users/$id.edit.tsx",
      "parent": "/(dashboard)/users/$id"
    }
  }
}
ROUTE_MANIFEST_END */
